


@mixin base-checkbox($color:$color-default){
  display: flex;
  justify-items: center;
  align-items: center;
  flex-direction: row;


  label{
    user-select: none;
  }
        input[type="checkbox"]{
            appearance: none;
            position: relative;
            width: 30px;
            height: 30px;
            border: 3px solid  $color-hover-checkbox ;
            border-radius: $border-radius - 5px;
            transition: $transition-time;

            cursor: pointer;
            &:hover{
              // box-shadow: checkbox-shadow-hover($color);
              background-color: $color-hover-checkbox;
            }
            &:hover:checked{
               box-shadow: checkbox-shadow-hover($color);
            }
        }
        input[type="checkbox"]::before {
            position: absolute;
            content: "";
            border-radius: inherit;
            width: inherit;
            height: inherit;
            opacity: 0;
            top: -3px;
            left: -3px;
            transition: $transition-time;
            box-shadow: inset 1em 1em var(--form-control-color);
          }
          input[type="checkbox"]:not(:checked){
            &:hover::before{
                transform: scale(0);
            }
          }
          input[type="checkbox"]:checked::before {
            opacity: 1;
            background-color: $color;
            top: -3px;
            left: -3px;
            // transform: translate(-50%,-50%);
            transform: scale(1);
          }
          input[type="checkbox"]:checked::before {
            opacity: 1;
            background-color: $color;
            top: -3px;
            left: -3px;
            transform: scale(1);
          }
          input[type="checkbox"]::after {
            content: "";
            position: absolute;
            top: 45%;
            left: 50%;
            width: 0px; //5
            height: 0px; //12
            border: 2px solid #fff;
            border-top: none;
            border-right: none;
            transform: translate(-50%, -50%) rotate(40deg) scaleX(-1);
            opacity: 0;
            transition: $transition-time;
          }
          input[type="checkbox"]:checked::after{
            width: 5px; //5
            height: 12px; //12
            opacity: 1;
            // animation: drawCheckmark .5s forwards ease-in-out; /* Apply the animation */

          }

          @keyframes drawCheckmark {
            0% {
              width: 0px;
              height: 0px;
              opacity: 0;
            }
           
            50% {
              width: 5px;
              height: 6px;
              opacity: 1;
            }
         
            100% {
              width: 5px;
              height: 12px;
              opacity: 1;
            }
          }
          

}